GAL16V8
1MEGDecoderChip

IEN A21 A20 A19 M0 M1 M2 M3  PG0 GND
PG1 NC  NC  NC  NC WR RD EN1 EN0 VCC

/WR = /IEN * /PG0 * PG1 * M0 * A20 * M1 * A21 + /IEN * /PG0 * PG1 * /M0 * /A20 * M1 * A21 + /IEN * /PG0 * PG1 * M0 * A20 * /M1 * /A21 + /IEN * /PG0 * PG1 * /M0 * /A20 * /M1 * /A21
/RD = /IEN * PG0 * /PG1 * M0 * A20 * M1 * A21 + /IEN * PG0 * /PG1 * /M0 * /A20 * M1 * A21 + /IEN * PG0 * /PG1 * M0 * A20 * /M1 * /A21 + /IEN * PG0 * /PG1 * /M0 * /A20 * /M1 * /A21
/EN0 = /A19 * /IEN * /PG0 * PG1 * /M0 * /A20 * /M1 * /A21 * M2 + /A19 * /IEN * /PG0 * PG1 * /M0 * /A20 * M1 * A21 * M2 + /A19 * /IEN * /PG0 * PG1 * M0 * A20 * /M1 * /A21 * M2 + /A19 * /IEN * /PG0 * PG1 * M0 * A20 * M1 * A21 * M2 + /A19 * /IEN * PG0 * /PG1 * /M0 * /A20 * M1 * A21 + /A19 * /IEN * PG0 * /PG1 * M0 * A20 * /M1 * /A21 + /A19 * /IEN * PG0 * /PG1 * M0 * A20 * M1 * A21 + /A19 * /IEN * PG0 * /PG1 * /M0 * /A20 * /M1 * /A21
/EN1 = A19 * /IEN * PG0 * /PG1 * /M0 * /A20 * /M1 * /A21 + A19 * /IEN * PG0 * /PG1 * M0 * A20 * M1 * A21 + A19 * /IEN * PG0 * /PG1 * /M0 * /A20 * M1 * A21 + A19 * /IEN * PG0 * /PG1 * M0 * A20 * /M1 * /A21 + A19 * /IEN * /PG0 * PG1 * /M0 * /A20 * /M1 * /A21 * M3 + A19 * /IEN * /PG0 * PG1 * /M0 * /A20 * M1 * A21 * M3 + A19 * /IEN * /PG0 * PG1 * M0 * A20 * /M1 * /A21 * M3 + A19 * /IEN * /PG0 * PG1 * M0 * A20 * M1 * A21 * M3

DESCRIPTION

Provides IBUS decoding to map 1 megabyte of RAM across two 512k SRAM chips.

Table Meaning
-------------
M0 - ADR Match A20
M1 - ADR Match A21
M2 - Chip 0 is Writable (active high)
M3 - Chip 1 is Writable (active high)

M0 and M1 are the only ones used and they match against the upper two bits of
the IBUS address lines. This provides a maximum of four megabytes addressable
by the IBUS.

PG0 and PG1 are the WR and RD pins, IEN is the IBUS.EN pin that comes from a
separate card. 

A19 is used to choose which of the two SRAM chips are to be selected.

M2 and M3 are used to state if a given chip is read-only or read/write. This is
done to support flash chips which use the exact same pinout. 


Now we have to only allow Writes on chips marked as read/write

If both M2 and M3 are high then it is business as usual

if m2 is low but M3 is high then only trigger if A19 is HIGH


if m2 is high but M3 is low then only trigger if A19 is low


if both are low then it is not allowed in any case!

However, we don't have enough product terms to satisfy this, instead we need to
deactivate enable on writes when it is not allowed
